# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  name: Agent Pool
  vmImage: 'windows-latest'
  networkAccessPolicy: Endpoint

resources:
  endpoints:
  - endpoint: MyEndpoint
    url: /subscriptions/58a3cb06-91b3-4f09-82b8-882ec0a9c038/resourceGroups/RG-QA-DataOps-EUS/providers/Microsoft.Network/privateEndpoints/PE-QA-DataOps-EUS



steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build solution **\*.sln'
  inputs:
    solution: '$(solution)'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- bash: |
   
   ipconfig
   ls -l
   
   cd Database1
   
   ls -l
   
   cd bin
   
   ls -l
   
   cd Release
   
   ls -l
     
  displayName: 'Bash Script'

- task: SqlAzureDacpacDeployment@1
  displayName: 'Azure SQL DacpacTask'
  inputs:
    azureSubscription: 'Promit''s Cloud(3)(58a3cb06-91b3-4f09-82b8-882ec0a9c038)'
    ServerName: 'promitx-qa.database.windows.net'
    DatabaseName: 'Sql-QA-DataOps-EUS'
    SqlUsername: ' $(Server_login)'
    SqlPassword: '$(Server_password)'
    DacpacFile: '$(System.DefaultWorkingDirectory)/Database1/bin/Release/Database1.dacpac'